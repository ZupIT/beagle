▿ BeagleDependencies
  - analytics: Optional<Analytics>.none
  - appBundle: NSBundle <(null)> (not yet loaded)
  - cacheManager: Optional<CacheManagerProtocol>.none
  - decoder: ComponentDecodingDummy
  ▿ deepLinkHandler: Optional<DeepLinkScreenManaging>
    - some: DeepLinkHandlerDummy
  ▿ formDataStoreHandler: FormDataStoreHandler
    - dataStore: 0 key/value pairs
  ▿ globalContext: GlobalContextDummy
    ▿ context: Observable<Context>
      - observers: 0 elements
      ▿ value: Context
        - id: ""
        - value: DynamicObject.empty
    - globalId: ""
  - isLoggingEnabled: true
  ▿ localFormHandler: Optional<LocalFormHandler>
    ▿ some: LocalFormHandlerSpy
      - actionsHandledCount: 0
  ▿ logger: BeagleLoggerProxy
    ▿ dependencies: InnerDependenciesResolver
      - container: (Function)
    - logger: BeagleLoggerDefault
  ▿ navigation: BeagleNavigator
    - builders: 0 key/value pairs
    - defaultAnimation: Optional<BeagleNavigatorAnimation>.none
    - defaultBuilder: Optional<() -> BeagleNavigationController>.none
  - navigationControllerType: BeagleNavigationController
  - networkClient: NetworkClientDummy
  ▿ opener: URLOpenerDumb
    - hasInvokedTryToOpen: false
  ▿ preFetchHelper: BeaglePreFetchHelper
    ▿ dependencies: InnerDependenciesResolver
      - container: (Function)
  - renderer: (Function)
  ▿ repository: RepositoryDefault
    ▿ dependencies: InnerDependenciesResolver
      - container: (Function)
    ▿ networkCache: NetworkCache
      - cacheHashHeader: "beagle-hash"
      ▿ dependencies: InnerDependenciesResolver
        - container: (Function)
      - serviceMaxCacheAge: "cache-control"
  ▿ resolver: InnerDependenciesResolver
    - container: (Function)
  - style: (Function)
  - theme: AppThemeDummy
  ▿ urlBuilder: UrlBuilder
    ▿ baseUrl: Optional<URL>
      - some: www.test.com
  ▿ validatorProvider: Optional<ValidatorProvider>
    ▿ some: ValidatorProviding
      - handlers: 0 key/value pairs
  - viewConfigurator: (Function)
  ▿ windowManager: WindowManagerDumb
    ▿ window: Optional<WindowProtocol>
      ▿ some: WindowMock
        - hasInvokedReplaceRootViewController: false
