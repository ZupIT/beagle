  openExternalURL("http://localhost")  -->  NULL 

  openNativeRoute(Beagle.Navigate.OpenNativeRoute(route: "path", data: nil, shouldResetApplication: false))  -->  NULL 

  openNativeRoute(Beagle.Navigate.OpenNativeRoute(route: "path", data: Optional(["data": "value"]), shouldResetApplication: false))  -->  NULL 

  resetApplication(Beagle.Route.declarative(Beagle.Screen(id: nil, style: nil, safeArea: nil, navigationBar: nil, screenAnalyticsEvent: nil, child: Beagle.Container(children: [], widgetProperties: Beagle.WidgetProperties(id: nil, style: nil, accessibility: nil), onInit: nil, context: nil), context: nil)), controllerId: nil)  -->  NULL 

  resetApplication(Beagle.Route.remote(Beagle.Route.NewPath(url: Beagle.Expression<Swift.String>.value("path"), shouldPrefetch: true, fallback: nil)), controllerId: nil)  -->  NewPath(url: Beagle.Expression<Swift.String>.value("path"), shouldPrefetch: true, fallback: nil) 

  resetApplication(Beagle.Route.remote(Beagle.Route.NewPath(url: Beagle.Expression<Swift.String>.value("path"), shouldPrefetch: false, fallback: nil)), controllerId: nil)  -->  NewPath(url: Beagle.Expression<Swift.String>.value("path"), shouldPrefetch: false, fallback: nil) 

  resetStack(Beagle.Route.declarative(Beagle.Screen(id: nil, style: nil, safeArea: nil, navigationBar: nil, screenAnalyticsEvent: nil, child: Beagle.Container(children: [], widgetProperties: Beagle.WidgetProperties(id: nil, style: nil, accessibility: nil), onInit: nil, context: nil), context: nil)))  -->  NULL 

  resetStack(Beagle.Route.remote(Beagle.Route.NewPath(url: Beagle.Expression<Swift.String>.value("path"), shouldPrefetch: true, fallback: nil)))  -->  NewPath(url: Beagle.Expression<Swift.String>.value("path"), shouldPrefetch: true, fallback: nil) 

  resetStack(Beagle.Route.remote(Beagle.Route.NewPath(url: Beagle.Expression<Swift.String>.value("path"), shouldPrefetch: false, fallback: nil)))  -->  NewPath(url: Beagle.Expression<Swift.String>.value("path"), shouldPrefetch: false, fallback: nil) 

  pushStack(Beagle.Route.declarative(Beagle.Screen(id: nil, style: nil, safeArea: nil, navigationBar: nil, screenAnalyticsEvent: nil, child: Beagle.Container(children: [], widgetProperties: Beagle.WidgetProperties(id: nil, style: nil, accessibility: nil), onInit: nil, context: nil), context: nil)), controllerId: nil)  -->  NULL 

  pushStack(Beagle.Route.remote(Beagle.Route.NewPath(url: Beagle.Expression<Swift.String>.value("path"), shouldPrefetch: true, fallback: nil)), controllerId: nil)  -->  NewPath(url: Beagle.Expression<Swift.String>.value("path"), shouldPrefetch: true, fallback: nil) 

  pushStack(Beagle.Route.remote(Beagle.Route.NewPath(url: Beagle.Expression<Swift.String>.value("path"), shouldPrefetch: false, fallback: nil)), controllerId: nil)  -->  NewPath(url: Beagle.Expression<Swift.String>.value("path"), shouldPrefetch: false, fallback: nil) 

  pushStack(Beagle.Route.declarative(Beagle.Screen(id: nil, style: nil, safeArea: nil, navigationBar: nil, screenAnalyticsEvent: nil, child: Beagle.Container(children: [], widgetProperties: Beagle.WidgetProperties(id: nil, style: nil, accessibility: nil), onInit: nil, context: nil), context: nil)), controllerId: Optional("customId"))  -->  NULL 

  pushStack(Beagle.Route.remote(Beagle.Route.NewPath(url: Beagle.Expression<Swift.String>.value("path"), shouldPrefetch: true, fallback: nil)), controllerId: Optional("customId"))  -->  NewPath(url: Beagle.Expression<Swift.String>.value("path"), shouldPrefetch: true, fallback: nil) 

  pushStack(Beagle.Route.remote(Beagle.Route.NewPath(url: Beagle.Expression<Swift.String>.value("path"), shouldPrefetch: false, fallback: nil)), controllerId: Optional("customId"))  -->  NewPath(url: Beagle.Expression<Swift.String>.value("path"), shouldPrefetch: false, fallback: nil) 

  pushView(Beagle.Route.declarative(Beagle.Screen(id: nil, style: nil, safeArea: nil, navigationBar: nil, screenAnalyticsEvent: nil, child: Beagle.Container(children: [], widgetProperties: Beagle.WidgetProperties(id: nil, style: nil, accessibility: nil), onInit: nil, context: nil), context: nil)))  -->  NULL 

  pushView(Beagle.Route.remote(Beagle.Route.NewPath(url: Beagle.Expression<Swift.String>.value("path"), shouldPrefetch: true, fallback: nil)))  -->  NewPath(url: Beagle.Expression<Swift.String>.value("path"), shouldPrefetch: true, fallback: nil) 

  pushView(Beagle.Route.remote(Beagle.Route.NewPath(url: Beagle.Expression<Swift.String>.value("path"), shouldPrefetch: false, fallback: nil)))  -->  NewPath(url: Beagle.Expression<Swift.String>.value("path"), shouldPrefetch: false, fallback: nil) 

  popStack  -->  NULL 

  popView  -->  NULL 

  popToView("path")  -->  NULL 

