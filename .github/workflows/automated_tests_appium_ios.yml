#
# Copyright 2020 ZUP IT SERVICOS EM TECNOLOGIA E INOVACAO SA
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
#

name: Beagle Appium iOS Tests

#on: workflow_dispatch
# testing for this PULL REQUEST only. Will be set back to 'workflow_dispatch' afterwards 
on:
    push:
        branches:
            - master
        paths:
            - '.github/**'
    pull_request:
        paths:
            - '.github/**'

jobs:
     
    appium_tests:
        
        name: Run Appium iOS tests
        runs-on: macos-latest 
        steps:

            -   uses: actions/checkout@v2

            ##################################################################################################
            # Caching - Start
            ##################################################################################################

            -   name: Cache fastlane dependences
                uses: actions/cache@v2
                env:
                    fastlane-cache-key: fastlane-cache-test
                    fastlane-path: ~/.gem
                with:
                     path: ${{ env.fastlane-path }}
                     key: ${{ runner.os }}-build-${{ env.fastlane-cache-key }}-${{ hashFiles('Gemfile.lock') }}

            -   name: Cache Beagle backend gradle dependencies
                uses: actions/cache@v2
                env:
                     gradle-cache-key: backend-tests-gradle-cache
                     gradle-path: ~/.gradle
                with:
                     path: ${{ env.gradle-path }}
                     key: ${{ runner.os }}-build-${{ env.gradle-cache-key }}-${{ hashFiles('backend/buildSrc/**') }}
                     restore-keys: ${{ runner.os }}-build-${{ env.gradle-cache-key }}

            ##################################################################################################
            # Caching - end
            ##################################################################################################

            -   name: Install Fastlane
                run: bundle config set path '~/.gem' && bundle install

            -   name: Start backend in background
                run: bash fastlane/automatedTests/start_test_backend.sh && sleep 30

            -   name: Config and run Appium server
                run: bash fastlane/automatedTests/appium/config_and_run_appium_server.sh

            -   name: Build app-ios project to generate the app file
                run: | 
                     set -e
                     cd $GITHUB_WORKSPACE\tests\appium\app-ios\AppiumApp\AppiumApp.xcodeproj && xcodebuild clean install && 
                     cd $GITHUB_WORKSPACE
            
            
            ##################################################################################################
            # Emulator config - start
            ##################################################################################################            

            -   name: List iOS Devices & Platforms        
                run: |          
                     echo "##### List of iOS Devices & Platforms:" && 
                     xcrun simctl list      
                 
            -   name: Install iOS Runtime        
                run: |  
                     set -e
                     gem install xcode-install xcversion simulators --install='iOS 13.5'      
            
            -   name: Create and Run iOS Emulator        
                run: |
                     set -e
                     xcrun simctl create TestiPhoneX com.apple.CoreSimulator.SimDeviceType.iPhone-11 \ 
                     com.apple.CoreSimulator.SimRuntime.iOS-13-5 > ~/deviceIdTemp.txt && 
                     DEVICEUUID=`cat deviceid.txt` && 
                     echo "Device id: $DEVICEUUID" &&
                     xcrun simctl boot $DEVICEUUID &&
                     sleep 30

            ##################################################################################################
            # Emulator config - end
            ##################################################################################################


            -   name: Run the tests
                env:
                    APP_FILE:
                run: | 
                     ${APP_FILE:=`find ~/Library/Developer/Xcode/DerivedData -name AppiumApp.app | grep Build/Products/Debug-iphonesimulator/AppiumApp.app`} 
                    ./tests/appium/project/gradlew -p tests/appium/project cucumber \ 
                    -Dplatform=ios \ 
                    -Dplatform_version='13.5' \ 
                    -Ddevice_name='iPhone 11' \ 
                    -Dapp_file='$APP_FILE'
                   

            -   name: Expose failed test screenshot files
                if: failure()
                uses: actions/upload-artifact@v2
                with:
                     name: failed_tests_screenshots
                     path: tests/appium/project/build/screenshots/

            -   name: Cleanup
                run: bundle exec fastlane automated_tests cleanup

