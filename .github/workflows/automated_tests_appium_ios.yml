#
# Copyright 2020 ZUP IT SERVICOS EM TECNOLOGIA E INOVACAO SA
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
#

name: Beagle Appium iOS Tests

#on:
#  workflow_run:
#    workflows: ["Beagle Appium Tests"]
#    types:
#      - completed

on:
  push:
    branches:
      - master
    paths:
      - '.github/**'
  pull_request:
    branches:
      - master
    paths:
      - '.github/**'

jobs:
  appium_tests:
    name: Tests job
    runs-on: macos-latest
    steps:
      - uses: actions/checkout@v2
        with:
          ref: ${{ github.event.workflow_run.head_branch }}

      - run: git branch

      ##################################################################################################
      # Caching - Start
      ##################################################################################################

      - name: Cache fastlane dependences
        uses: actions/cache@v2
        env:
          fastlane-cache-key: fastlane-cache-test
          fastlane-path: ~/.gem
        with:
          path: ${{ env.fastlane-path }}
          key: ${{ runner.os }}-build-${{ env.fastlane-cache-key }}-${{ hashFiles('Gemfile.lock') }}

      - name: Cache gradle dependencies of project backend
        uses: actions/cache@v2
        env:
          gradle-cache-key: backend-tests-gradle-cache
          gradle-path: ~/.gradle
        with:
          path: ${{ env.gradle-path }}
          key: ${{ runner.os }}-build-${{ env.gradle-cache-key }}-${{ hashFiles('backend/buildSrc/**') }}
          restore-keys: ${{ runner.os }}-build-${{ env.gradle-cache-key }}

      ##################################################################################################
      # Caching - end
      ##################################################################################################

      - name: Install Fastlane
        run: bundle config set path '~/.gem' && bundle install

      - name: Start backend in background
        run: bash fastlane/automatedTests/start_test_backend.sh && sleep 30

      - name: Config and run Appium server
        run: bash fastlane/automatedTests/appium/config_and_run_appium_server.sh

      - name: Build app-ios project to generate the app file
        run: |
          set -e
          xcodebuild -showsdks
          xcodebuild  -workspace iOS/Beagle.xcworkspace -scheme AppiumApp -destination 'platform=iOS Simulator,name=iPhone 11' -quiet


      ##################################################################################################
      # Emulator config - start
      ##################################################################################################

#      - name: Install iOS Runtime
#        run: |
#          set -e
#          echo "##### List of iOS Devices & Platforms:"
#          xcrun simctl list
#          xcversion simulators --install='iOS 13.5'
#      - name: Prepare iOS 13.5 simulator
#        run: |
#          sudo mkdir -p /Library/Developer/CoreSimulator/Profiles/Runtimes
#          sudo ln -s /Applications/Xcode_10.3.app/Contents/Developer/Platforms/iPhoneOS.platform/Developer/Library/CoreSimulator/Profiles/Runtimes/iOS.simruntime /Library/Developer/CoreSimulator/Profiles/Runtimes/iOS\ 13.5.simruntime
#          # xcrun simctl list runtimes
#          # xcrun simctl create custom-test-device "iPad Pro (9.7-inch)" "com.apple.CoreSimulator.SimRuntime.iOS-13-5"
#          # xcrun simctl list devices 13.5

      - name: Create and Run iOS Emulator
        run: |
          set -e
          echo "##### Devicetypes runtime:"
          xcrun simctl list devicetypes runtimes
          echo "##### Creating iOS image and starting emulator with it ..."
          xcrun simctl create TestiPhoneX com.apple.CoreSimulator.SimDeviceType.iPhone-11 com.apple.CoreSimulator.SimRuntime.iOS-14-4 > ~/deviceIdTemp.txt
          DEVICEUUID=`cat ~/deviceIdTemp.txt`
          echo "Device id: $DEVICEUUID"
          xcrun simctl boot $DEVICEUUID
          sleep 30

      ##################################################################################################
      # Emulator config - end
      ##################################################################################################

      - name: Run the tests
        run: bash fastlane/automatedTests/appium/ios/run_appium_ios_tests.sh

      - name: Expose failed test screenshot files
        if: failure()
        uses: actions/upload-artifact@v2
        with:
          name: failed_tests_screenshots
          path: tests/appium/project/build/screenshots/

      - name: Cleanup
        run: bundle exec fastlane automated_tests cleanup
