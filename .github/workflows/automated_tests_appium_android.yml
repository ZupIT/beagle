name: Beagle Appium Android Tests

# on: workflow_dispatch
# testing for this PULL REQUEST only. Will be set back to 'workflow_dispatch' afterwards 
on:
    push:
        branches:
            - master
        paths:
            - '.github/**'
    pull_request:
        paths:
            - '.github/**'

jobs:
    run-automated-tests:
        name: Run Appium Android tests
        runs-on: macos-latest
        steps:
            -   uses: actions/checkout@v2

            -   name: Cache fastlane dependences
                uses: actions/cache@v2
                env:
                    fastlane-cache-key: fastlane-cache-test
                    fastlane-path: ~/.gem
                with:
                    path: ${{ env.fastlane-path }}
                    key: ${{ runner.os }}-build-${{ env.fastlane-cache-key }}-${{ hashFiles('Gemfile.lock') }}
            
            -   name: Install Fastlane
                run: bundle config set path '~/.gem' && bundle install

            -   name: Cache backend gradle dependencies
                uses: actions/cache@v2
                env:
                    gradle-cache-key: backend-tests-gradle-cache
                    gradle-path: ~/.gradle
                with:
                    path: ${{ env.gradle-path }}
                    key: ${{ runner.os }}-build-${{ env.gradle-cache-key }}-${{ hashFiles('backend/buildSrc/**') }}
                    restore-keys: ${{ runner.os }}-build-${{ env.gradle-cache-key }}
            
            -   name: Start backend in background
                run: bash fastlane/automatedTests/start_test_backend.sh

            #TODO wait for backend server finish starting to proceed
            -   name: Wait server starts
                run: sleep 30

            -   name: Cache Appium app-android gradle dependencies
                uses: actions/cache@v2
                env:
                    gradle-cache-key: android-tests-gradle-cache
                    gradle-path: ~/.gradle
                with:
                    path: ${{ env.gradle-path }}
                    key: ${{ runner.os }}-build-${{ env.gradle-cache-key }}-${{ hashFiles('/tests/appium/app-android/buildSrc/**') }}
                    restore-keys: ${{ runner.os }}-build-${{ env.gradle-cache-key }}
            
            -   name: Cache android platforms
                uses: actions/cache@v2
                env:
                    android-platform-cache-key: android-platform-cache
                    android-platform-path: /Users/runner/Library/Android/sdk/platforms
                with:
                    path: ${{ env.android-platform-path }}
                    key: ${{ runner.os }}-build-${{ env.android-platform-cache-key }}-${{ hashFiles('fastlane/automatedTests/appium/android/config_and_run_android_emulator.sh') }}
            
            -   name: Cache android system-images
                uses: actions/cache@v2
                env:
                    android-system-images-cache-key: android-system-images-cache
                    android-system-images-path: /Users/runner/Library/Android/sdk/system-images
                with:
                    path: ${{ env.android-system-images-path }}
                    key: ${{ runner.os }}-build-${{ env.android-system-images-cache-key }}-${{ hashFiles('fastlane/automatedTests/appium/android/config_and_run_android_emulator.sh') }}
            
            -   name: Cache android avds
                uses: actions/cache@v2
                env:
                    android-avd-cache-key: android-avd-cache
                    android-avd-path: ~/.android
                with:
                    path: ${{ env.android-avd-path }}
                    key: ${{ runner.os }}-build-${{ env.android-avd-cache-key }}-${{ hashFiles('fastlane/automatedTests/appium/android/config_and_run_android_emulator.sh') }}
            
            -   name: Config and run Appium server
                run: bash fastlane/automatedTests/appium/android/config_and_run_appium_server.sh

            -   name: Config and run Android emulator
                run: bash fastlane/automatedTests/appium/android/config_and_run_android_emulator.sh
                env:
                    ANDROID_SDK_ROOT: /Users/runner/Library/Android/sdk
            
            -   name: Run Appium tests on Android
                run: bash fastlane/automatedTests/appium/android/run_appium_android_tests.sh
                env:
                    ANDROID_SDK_ROOT: /Users/runner/Library/Android/sdk

            -   name: Expose failed test screenshot files
                if: failure()
                uses: actions/upload-artifact@v2
                with:
                    name: failed_tests_screenshots
                    path: tests/appium/project/build/screenshots/

            -   name: Cleanup
                run: bundle exec fastlane automated_tests cleanup
