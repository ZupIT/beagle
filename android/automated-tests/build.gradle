/*
 * Copyright 2020 ZUP IT SERVICOS EM TECNOLOGIA E INOVACAO SA
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

import br.com.zup.beagle.Dependencies

apply plugin: 'com.android.application'
apply plugin: 'kotlin-android'
apply plugin: 'kotlin-android-extensions'
apply plugin: 'kotlin-kapt'
apply plugin: 'shot'

android {
    compileOptions {
        sourceCompatibility = JavaVersion.VERSION_1_8
        targetCompatibility = JavaVersion.VERSION_1_8
    }
    kotlinOptions {
        jvmTarget = JavaVersion.VERSION_1_8
    }

    compileSdkVersion 29

    defaultConfig {
        applicationId "com.example.automatedTests"
        minSdkVersion 19
        targetSdkVersion 29
        versionCode 1
        versionName "1.0"
        multiDexEnabled true

        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"

        if (project.ext.has("screenshotTests")) {
            testApplicationId "com.example.automatedTests.test"
            testInstrumentationRunner "com.karumi.shot.ShotTestRunner"
        } else {
            testApplicationId "com.example.automatedTests.cucumber.steps"
            testInstrumentationRunner "com.example.automatedTests.cucumber.steps.Instrumentation"
        }
        buildConfigField "String", "TEST_TAGS", "\"${getTestTags()}\""
    }

    sourceSets {
        androidTest {
            assets.srcDirs = ['src/androidTest/assets']
        }
    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }
}

dependencies {
    implementation fileTree(dir: "libs", include: ["*.jar"])
    implementation Dependencies.GeneralLibraries.kotlin
    implementation Dependencies.AndroidxLibraries.coreKtx
    implementation Dependencies.AndroidxLibraries.appcompat
    implementation 'androidx.constraintlayout:constraintlayout:2.0.1'

    implementation project(Dependencies.Modules.core)
    implementation 'androidx.appcompat:appcompat:1.2.0'
    kapt project(Dependencies.Modules.processor)

    testImplementation Dependencies.TestLibraries.junit
    testImplementation Dependencies.TestLibraries.kotlinTest
    testImplementation Dependencies.TestLibraries.mockk


    androidTestImplementation 'androidx.test.ext:junit:1.1.2'
    androidTestImplementation 'info.cukes:cucumber-android:1.2.5'
    androidTestImplementation 'info.cukes:cucumber-picocontainer:1.2.5'
    androidTestImplementation Dependencies.TestLibraries.espressoCore
    androidTestImplementation Dependencies.TestLibraries.testRules
    androidTestImplementation Dependencies.TestLibraries.testRunner
    androidTestImplementation Dependencies.TestLibraries.testExt

}

def getTestTags() {
    return project.hasProperty("tags") ? project.getProperties().get("tags") : ""
}