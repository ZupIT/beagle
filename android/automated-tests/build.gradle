/*
 * Copyright 2020 ZUP IT SERVICOS EM TECNOLOGIA E INOVACAO SA
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

import br.com.zup.beagle.Dependencies

apply plugin: 'com.android.application'
apply plugin: 'kotlin-android'
apply plugin: 'kotlin-android-extensions'
apply plugin: 'kotlin-kapt'
apply plugin: 'shot'
apply plugin: 'de.mannodermaus.android-junit5'

android {
    compileOptions {
        sourceCompatibility = JavaVersion.VERSION_1_8
        targetCompatibility = JavaVersion.VERSION_1_8
    }
    kotlinOptions {
        jvmTarget = JavaVersion.VERSION_1_8
    }

    compileSdkVersion 30

    defaultConfig {
        applicationId "br.com.zup.beagle.automatedTests"
        minSdkVersion 19
        targetSdkVersion 30
        versionCode 1
        versionName "1.0"

        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"

        if (project.ext.has("screenshotTests")) {
            testApplicationId "br.com.zup.beagle.automatedTests"
            testInstrumentationRunner "com.karumi.shot.ShotTestRunner"
        } else {
            testApplicationId "br.com.zup.beagle.automatedTests.cucumber.steps"
            testInstrumentationRunner "br.com.zup.beagle.automatedTests.cucumber.steps.Instrumentation"
        }
        buildConfigField "String", "TEST_TAGS", "\"${getTestTags()}\""
    }

    sourceSets {
        androidTest.java.srcDirs += "src/androidTest/kotlin"
        debug.java.srcDirs += "src/debug/kotlin"
        main.java.srcDirs += "src/main/kotlin"
        test.java.srcDirs += "src/test/kotlin"

        androidTest {
            assets.srcDirs = ['src/androidTest/assets']
        }
    }

    buildTypes {
        debug {
            testCoverageEnabled true
        }
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }

    testOptions {
        unitTests.all {
            useJUnitPlatform()
        }
    }
}


dependencies {
    implementation Dependencies.GeneralLibraries.kotlin
    implementation Dependencies.AndroidxLibraries.coreKtx
    implementation Dependencies.AndroidxLibraries.appcompat
    implementation Dependencies.GeneralLibraries.kotlinCoroutines

    implementation project(Dependencies.Modules.core)
    kapt project(Dependencies.Modules.processor)

    testImplementation Dependencies.TestLibraries.junitApi
    testRuntimeOnly Dependencies.TestLibraries.junitEngine
    testImplementation Dependencies.TestLibraries.kotlinCoroutinesTest
    testImplementation Dependencies.TestLibraries.mockk
    testImplementation Dependencies.TestLibraries.archCoreTesting
    testImplementation Dependencies.GeneralLibraries.jsonObject

    androidTestImplementation Dependencies.TestLibraries.cucumberAndroid
    androidTestImplementation Dependencies.TestLibraries.cucumberPicocontainer
    androidTestImplementation Dependencies.TestLibraries.espressoCore
    androidTestImplementation Dependencies.TestLibraries.testRules
    androidTestImplementation Dependencies.TestLibraries.testRunner
    androidTestImplementation Dependencies.TestLibraries.testExt

    implementation Dependencies.GoogleLibraries.materialDesign
}

def getTestTags() {
    return project.hasProperty("tags") ? project.getProperties().get("tags") : ""
}