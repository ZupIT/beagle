platform :android do

  desc "Pull Request verification"
  lane :pull_request_verification do
    gradle(task: "detekt lintDebug jacocoTestReport")
    gradle(task: "android:sample:assembleDebug android:sample:assembleDebugAndroidTest")
    commit = last_git_commit
    commit_hash = commit[:commit_hash]
    codecov_reporter(token: ENV["CODECOV_TOKEN"], flags: "-F android -C #{commit_hash}")
  end

  desc "Publish remote new version"
  lane :remote_publish do
    gradle(task: "build")
    gradle(task: "publish")
  end

   desc "Publish local new version"
    lane :local_publish do
      gradle(task: "build")
      gradle(task: "publishToMavenLocal")
    end

end

desc "Publish new release based on last two tags"
  lane :deploy do
    git_pull(only_tags: true)
    ENV["VERSION_DEPLOY"] = last_git_tag
    sh "fastlane android remote_publish"

     sh "bash ./delete_release.sh"
     set_github_release(
       repository_name: "ZupIT/beagle",
       api_token: ENV["REPO_TOKEN"],
       name: ENV["VERSION_DEPLOY"],
       tag_name: ENV["VERSION_DEPLOY"],
       description: release_notes,
       commitish: "master")

  end

desc "Generate release notes"
  private_lane :release_notes do
    get_previous_tag = sh("git describe --abbrev=0 --tags `git rev-list --tags --skip=1 --max-count=1` |tr -d '\n'")
    changelog = changelog_from_git_commits(
                        between: [get_previous_tag, ENV["VERSION_DEPLOY"]],
                        merge_commit_filtering: "exclude_merges",
                        pretty: "%s - (%ae %aD)")

    "\nRelease notes #{ ENV["VERSION_DEPLOY"] }
    \nChanges:
    \n#{changelog}"
  end